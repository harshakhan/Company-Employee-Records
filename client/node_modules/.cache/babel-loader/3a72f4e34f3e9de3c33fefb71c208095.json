{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/harsha/Documents/Employee manager/c/src/Components/EmployeeTable.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid, GridOverlay } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst columns = [{\n  field: 'name',\n  headerName: 'Name',\n  width: 200\n}, {\n  field: 'age',\n  headerName: 'Age',\n  type: 'number',\n  width: 90\n}, {\n  field: 'gender',\n  headerName: 'Gender',\n  width: 90,\n  valueGetter: params => `${{\n    'M': 'Male',\n    'F': 'Female',\n    'O': 'Others'\n  }[params.getValue('gender')] || 'Others'}`\n}, {\n  field: 'grade',\n  headerName: 'Grade',\n  width: 120\n}, {\n  field: 'tests',\n  headerName: 'Total Tests',\n  width: 90,\n  valueGetter: params => {\n    var _params$data, _params$data$tests;\n\n    return `${params === null || params === void 0 ? void 0 : (_params$data = params.data) === null || _params$data === void 0 ? void 0 : (_params$data$tests = _params$data.tests) === null || _params$data$tests === void 0 ? void 0 : _params$data$tests.length}`;\n  }\n}];\n\nfunction CustomLoadingOverlay() {\n  return /*#__PURE__*/_jsxDEV(GridOverlay, {\n    style: {\n      background\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomLoadingOverlay;\nexport default function DataTable({\n  students = [],\n  loading,\n  limit,\n  totalResults,\n  totalPages,\n  page,\n  setPage\n}) {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: students,\n      components: {\n        loadingOverlay: CustomLoadingOverlay\n      },\n      onRowClick: value => {\n        window.localStorage.setItem('studentId', value.data._id);\n        history.push(value.data._id);\n      },\n      loading: loading,\n      columns: columns,\n      paginationMode: \"server\",\n      rowCount: totalResults,\n      onPageChange: e => setPage(e.page),\n      pageSize: limit,\n      pagination: true,\n      page: page,\n      checkboxSelection: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataTable, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = DataTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomLoadingOverlay\");\n$RefreshReg$(_c2, \"DataTable\");","map":{"version":3,"sources":["/home/harsha/Documents/Employee manager/c/src/Components/EmployeeTable.jsx"],"names":["React","DataGrid","GridOverlay","useHistory","LinearProgress","columns","field","headerName","width","type","valueGetter","params","getValue","data","tests","length","CustomLoadingOverlay","background","position","top","DataTable","students","loading","limit","totalResults","totalPages","page","setPage","history","height","loadingOverlay","value","window","localStorage","setItem","_id","push","e"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid, GridOverlay } from '@material-ui/data-grid';\nimport { useHistory } from 'react-router-dom';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst columns = [\n  { field: 'name', headerName: 'Name', width: 200 },\n  { field: 'age', headerName: 'Age', type: 'number', width: 90 },\n  { field: 'gender', headerName: 'Gender', width: 90, valueGetter: params => `${{ 'M': 'Male', 'F': 'Female', 'O': 'Others' }[params.getValue('gender')] || 'Others'}`},\n  { field: 'grade', headerName: 'Grade', width: 120 },\n  { field: 'tests', headerName: 'Total Tests', width: 90, valueGetter: params => {\n    return `${params?.data?.tests?.length}`}\n  }\n]\n\nfunction CustomLoadingOverlay() {\n  return (\n    <GridOverlay style={{background}}>\n      <div style={{ position: 'absolute', top: 0, width: '100%' }}>\n        <LinearProgress />\n      </div>\n    </GridOverlay>\n  );\n}\n\nexport default function DataTable({ students = [], loading, limit, totalResults, totalPages, page, setPage }) {\n  const history = useHistory()\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={students} components={{ loadingOverlay: CustomLoadingOverlay }}\n       onRowClick={value => {\n          window.localStorage.setItem('studentId', value.data._id)\n          history.push(value.data._id)  \n        }}\n       loading={loading} columns={columns} paginationMode='server' \n       rowCount={totalResults} \n       onPageChange={e => setPage(e.page)} pageSize={limit} \n       pagination={true} page={page} checkboxSelection={false} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}